#! /bin/sh
# XFS QA Test No. 011
# $Id: 1.1 $
#
# dirstress
#
#-----------------------------------------------------------------------
# Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.
# 
# Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
# Mountain View, CA  94043, or:
# 
# http://www.sgi.com 
# 
# For further information regarding this notice, see: 
# 
# http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/
#-----------------------------------------------------------------------
#
# creator
owner=dxm@sgi.com

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.rc
. ./common.filter

here=`pwd`
tmp=/tmp/$$
status=0	# success is the default!
out=$TEST_DIR/dirstress.$$
trap "rm -f $tmp.*; _cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    rm -rf $out
}

# get standard environment, filters and checks
. ./common.rc
. ./common.filter

count=1000
if ! mkdir $out
then
    echo "!! couldn't mkdir $out"
    status=1
    exit
fi

rm -f $seq.out.full

_test()
{
    test="$1"
    args="$2"
    count="$3"
    
    echo "*** TEST $test $args -f <count>"
    if ! $here/src/dirstress -d $out -f $count $args >$tmp.out 2>&1
    then
        echo "    dirstress failed"
        echo "*** TEST $test -d $out -f $count $args" >>$seq.out.full
        cat $tmp.out >>$seq.out.full
        status=1
    fi
}

# dirstress doesn't check returns - this is a crash & burn test.

count=1000
_test 1 "-p 1 -n 1" $count
_test 2 "-p 5 -n 1" $count
_test 3 "-p 5 -n 5" $count

# if error
exit
