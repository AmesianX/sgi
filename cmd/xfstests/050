#! /bin/sh
# XFS QA Test No. 050
# $Id: 1.1 $
#
# Exercises basic XFS quota functionality
#	MOUNT_OPTIONS env var switches the test type (uid/gid/acct/enfd)
# 	options are:  (-o) usrquota, grpquota, uqnoenforce, gqnoenforce
#	default is:   usrquota
#
#-----------------------------------------------------------------------
# Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.
# 
# Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
# Mountain View, CA  94043, or:
# 
# http://www.sgi.com 
# 
# For further information regarding this notice, see: 
# 
# http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/
#-----------------------------------------------------------------------
#
# creator
owner=nathans@sgi.com

seq=`basename $0`
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!

# get standard environment, filters and checks
. ./common.rc
. ./common.filter
. ./common.quota

_cleanup()
{
	echo; echo "*** unmount"
	umount $SCRATCH_MNT 2>/dev/null
	rm -f $tmp.*
}
trap "_cleanup; exit \$status" 0 1 2 3 15
rm -f $seq.full $seq.out

_require_scratch
_require_quota

# setup a default run
if [ -z "$MOUNT_OPTIONS" ]; then
	MOUNT_OPTIONS="-o usrquota"; export MOUNT_OPTIONS
fi

# real QA test starts here
mkfs -t xfs -f $SCRATCH_DEV | _filter_mkfs 2>$tmp.mkfs
cat $tmp.mkfs >>$seq.full
chmod a+w $seq.full	# arbitrary users will write here

# keep the blocksize and data size for dd later
. $tmp.mkfs

_qmount

# setup exactly what it is we'll be testing
if src/feature -u $SCRATCH_DEV
then
	type=u ; id=`_choose_uid`; ln $seq.usrquota $seq.out
elif src/feature -g $SCRATCH_DEV
then
	type=g ; id=`_choose_gid`; ln $seq.grpquota $seq.out
elif src/feature -U $SCRATCH_DEV
then
	type=u ; id=`_choose_uid`; ln $seq.uqnoenforce $seq.out
elif src/feature -G $SCRATCH_DEV
then
	type=g ; id=`_choose_gid`; ln $seq.gqnoenforce $seq.out
else
	_notrun "No quota support at mount time"
fi

echo "Using output from '" `ls -l $seq.out` "'" >>$seq.full
echo "and using type=$type id=$id" >>$seq.full

echo
echo "*** report no quota settings" | tee -a $seq.full
repquota -m -$type $SCRATCH_DEV | _filter_repquota

echo
echo "*** report initial settings" | tee -a $seq.full
setquota -n -$type $id $SCRATCH_DEV 100 500 4 10
_file_as_id $SCRATCH_MNT/initme $id $type $dbsize 0
repquota -m -$type $SCRATCH_DEV | _filter_repquota

echo
echo "*** push past the soft inode limit" | tee -a $seq.full
_file_as_id $SCRATCH_MNT/softie1 $id $type $dbsize 0
_file_as_id $SCRATCH_MNT/softie2 $id $type $dbsize 0
_qmount
repquota -m -$type $SCRATCH_DEV | _filter_repquota

echo
echo "*** push past the soft block limit" | tee -a $seq.full
_file_as_id $SCRATCH_MNT/softie $id $type $dbsize 140
_qmount
repquota -m -$type $SCRATCH_DEV | _filter_repquota

echo
echo "*** push past the hard inode limit (expect EDQUOT)" | tee -a $seq.full
for i in 1 2 3 4 5 6 7 8 9 10 11 12
do
	_file_as_id $SCRATCH_MNT/hard$i $id $type $dbsize 0
done
_qmount
repquota -m -$type $SCRATCH_DEV | _filter_repquota

echo
echo "*** push past the hard block limit (expect EDQUOT)" | tee -a $seq.full
_file_as_id $SCRATCH_MNT/softie $id $type $dbsize 540
_qmount
repquota -m -$type $SCRATCH_DEV | _filter_repquota

# success, all done
status=0
exit
