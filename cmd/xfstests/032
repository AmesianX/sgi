#! /bin/sh
# XFS QA Test No. 032
# $Id: 1.1 $
#
# cross check mkfs detection of foreign filesystems
#
#-----------------------------------------------------------------------
# Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.
# 
# Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
# Mountain View, CA  94043, or:
# 
# http://www.sgi.com 
# 
# For further information regarding this notice, see: 
# 
# http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/
#-----------------------------------------------------------------------
#
# creator
owner=nathans@sgi.com

seq=`basename $0`
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15
rm -f $seq.full

# get standard environment, filters and checks
. ./common.rc
. ./common.filter

# real QA test starts here
# 
_require_scratch

echo "Silence is golden."
for fs in `echo /sbin/mkfs.* | sed -e 's/.sbin.mkfs.//g'`
do
	preop=""	# for special input needs
	preargs=""	# for any special pre-device options
	postargs=""	# for any special post-device options

	# minix mkfs fails for large devices, restrict to 2000 blocks
	[ $fs = "minix" ] && postargs=2000
	# these folk prompt before writing
	[ $fs = "jfs" ] && preop="echo Y |"
	[ $fs = "reiserfs" ] && preop="echo y |"

	# overwite the first few Kb - should blow away superblocks
	src/devzero -n 20 $SCRATCH_DEV >/dev/null

	# create a filesystem of this type
	echo "=== Creating $fs filesystem..." >>$seq.full
	echo "    ( mkfs -t $fs $SCRATCH_DEV )" >>$seq.full
	eval $preop mkfs -t $fs $preargs $SCRATCH_DEV $postargs >>$seq.full 2>&1

	# next, ensure we don't overwrite it
	echo "=== Attempting XFS overwrite of $fs..." >>$seq.full
	mkfs -t xfs $SCRATCH_DEV >>$seq.full 2>&1

	[ $? -eq 0 ] && echo "Failed - overwrote fs type ${fs}!"
done

# success, all done
status=0
exit
