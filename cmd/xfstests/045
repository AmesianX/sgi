#! /bin/sh
# XFS QA Test No. 045
# $Id: 1.1 $
#
# test mount of two FSes with identical UUID and mount with unknown option
#
#-----------------------------------------------------------------------
# Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.
# 
# Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
# Mountain View, CA  94043, or:
# 
# http://www.sgi.com 
# 
# For further information regarding this notice, see: 
# 
# http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/
#-----------------------------------------------------------------------
#
# creator
owner=dxm@sgi.com

seq=`basename $0`
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common.rc
. ./common.filter

_get_uuid()
{
        xfs_db -r $1 -c "uuid" | $AWK_PROG '
                /^uuid/ { print $3 }
        '
}

# real QA test starts here

_require_scratch

echo "*** get uuid"
uuid=`_get_uuid $TEST_DEV`
echo "*** mkfs"
if ! mkfs -t xfs -f $SCRATCH_DEV >$tmp.out 2>&1
then
    cat $tmp.out
    echo "!!! failed to mkfs on $SCRATCH_DEV"
    exit
fi

echo "*** mount fs with bad mount option (expect failure)"
if mount -t xfs $SCRATCH_DEV $SCRATCH_MNT -o foobar >$tmp.out 2>&1
then
    cat $tmp.out
    echo "!!! mount succeeded (expecting failure)"
    exit
fi

echo "*** duplicate uuid"
xfs_db -x $SCRATCH_DEV -c "uuid $uuid" >/dev/null

echo "*** mount fs with duplicate uuid (expect failure)"
if mount -t xfs $SCRATCH_DEV $SCRATCH_MNT >$tmp.out 2>&1
then
    cat $tmp.out
    echo "!!! mount succeeded (expecting failure)"
    exit
fi

echo "*** ok!"
# success, all done
status=0
exit
